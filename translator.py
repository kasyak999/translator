"""–ü–µ—Ä–µ–≤–æ–¥—á–∏–∫ —Å –ª—é–±—ã—Ö —è–∑—ã–∫–æ–≤ –Ω–∞ —Ä—É—Å—Å–∫–∏–π –∏ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫"""
import os
import sys
import tkinter as tk
from tkinter import messagebox
import webbrowser
import httpcore
from googletrans import Translator  # type: ignore
import customtkinter as ctk  # type: ignore
from spellchecker import SpellChecker


BUFFER = os.popen('xsel -o').read()  # –ü–æ–ª—É—á–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ –±—É—Ñ–µ—Ä–∞ –æ–±–º–µ–Ω–∞
WIDTH_TEXT = 800
HEIGHT_TEXT = 250
HEIGHT = 8
TITLE = '–ü–µ—Ä–µ–≤–æ–¥—á–∏–∫ v1.5'
TEXT_COLOR = 'whitesmoke'
FONT = ("Arial", 20)
PASTE_BUFFER = '–í—Å—Ç–∞–≤–∏—Ç—å –∏–∑ –±—É—Ñ–µ—Ä–∞'
CLEAR = '–û—á–∏—Å—Ç–∏—Ç—å'
INFO_TEXT = '–ü–µ—Ä–µ–≤–æ–¥—á–∏–∫ —Å –ª—é–±—ã—Ö —è–∑—ã–∫–æ–≤ –Ω–∞ —Ä—É—Å—Å–∫–∏–π –∏ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫'
GITHUB = 'https://github.com/kasyak999/translator'
# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫–∞
translator = Translator()
LABEL_WIDTH = 190
TRANSLATE_RU = '–ü–µ—Ä–µ–≤–µ—Å—Ç–∏ üá∑üá∫'
TRANSLATE_EN = '–ü–µ—Ä–µ–≤–µ—Å—Ç–∏ üá∫üá∏'
SPELLING_RU = '–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏–∏ üá∑üá∫'
SPELLING_EN = '–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏–∏ üá∫üá∏'


def click_translation(
    program: ctk.CTk, language: str, value_1: ctk.CTkTextbox,
    value_2: ctk.CTkTextbox
):
    """–ü–µ—Ä–µ–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞"""
    text_input = value_1.get("1.0", 'end')
    if text_input:
        try:
            translation = translator.translate(text_input, dest=language)
        except httpcore.ConnectError as e:
            error = f'–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É.\n {e}'
            program.withdraw()  # –°–∫—Ä—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ –æ–∫–Ω–æ
            messagebox.showerror(TITLE, error)
            program.destroy()
            raise ConnectionError(error) from e
        else:
            value_2.configure(state="normal")
            value_2.delete("1.0", 'end')  # –û—á–∏—â–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—è
            value_2.insert('end', translation.text)
            value_2.configure(state="disabled")


def click_button_byfer(value_1: ctk.CTkTextbox):
    """–í—Å—Ç–∞–≤–∏—Ç—å —Ç–µ–∫—Å—Ç –∏–∑ –±—É—Ñ–µ—Ä–∞ –æ–±–º–µ–Ω–∞"""
    try:
        byfer = value_1.clipboard_get()  # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –∏–∑ –±—É—Ñ–µ—Ä–∞ –æ–±–º–µ–Ω–∞
    except tk.TclError:
        messagebox.showinfo("–û—à–∏–±–∫–∞", "–ë—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞ –ø—É—Å—Ç.")
        byfer = ''
    value_1.delete("1.0", 'end')  # –û—á–∏—â–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—è
    value_1.insert('end', byfer)  # –í—Å—Ç–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –∏–∑ –±—É—Ñ–µ—Ä–∞


def click_button_clear(value_1: ctk.CTkTextbox, value_2: ctk.CTkTextbox):
    """–û—á–∏—Å—Ç–∏—Ç—å –ø–æ–ª–µ"""
    value_1.delete("1.0", tk.END)
    value_2.configure(state="normal")
    value_2.delete("1.0", tk.END)
    value_2.configure(state="disabled")


def close_app(program: ctk.CTk):
    """–ó–∞–∫—Ä—ã—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É"""
    program.destroy()


def help_text(program: ctk.CTk):
    """–ì–æ—Ä—è—á–∏–∏ –∫–ª–∞–≤–∏—à–∏"""
    text = f'{INFO_TEXT}\n\n'
    text += '–ì–æ—Ä—è—á–∏–µ –∫–ª–∞–≤–∏—à–∏:\n'
    text += 'Esc - –ó–∞–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ\n'
    text += 'F1 - –ü–æ–º–æ—â—å\n'
    text += f'F2 - {TRANSLATE_RU}\n'
    text += f'F3 - {TRANSLATE_EN}\n'
    text += f'F4 - {SPELLING_RU}\n'
    text += f'F5 - {SPELLING_EN}\n'
    text += f'F6 - {PASTE_BUFFER}\n'
    text += f'F7 - {CLEAR}\n'
    text += 'Ctrl+c - –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å\n'
    text += 'Ctrl+v - –í—Å—Ç–∞–≤–∏—Ç—å\n'
    text += 'Enter - –ü–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å –∫—É—Ä—Å–æ—Ä –Ω–∞ –ø–æ–ª–µ –≤–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞\n'
    info_window = ctk.CTkToplevel(program)
    info_window.title("–ü–æ–º–æ—â—å")

    info_window.resizable(False, False)
    label = ctk.CTkLabel(
        info_window, text=text, font=FONT, justify='left', width=WIDTH_TEXT)
    label.pack(pady=(10, 0))
    close_button = ctk.CTkButton(
        info_window, text="–ó–∞–∫—Ä—ã—Ç—å", command=info_window.destroy,
        fg_color="red", hover_color="maroon", text_color=TEXT_COLOR)
    close_button.pack(pady=(10, 10))


def on_key_press(
    program: ctk.CTk, event: tk.Event, value_1: ctk.CTkTextbox,
    value_2: ctk.CTkTextbox
):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–ª–∞–≤–∏—à"""
    if event.keysym == 'Return':  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞–∂–∞—Ç–∞ –ª–∏ –∫–ª–∞–≤–∏—à–∞ Enter
        value_1.focus_set()  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–æ–∫—É—Å –Ω–∞ value_1
        return "break"  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –Ω–∞–∂–∞—Ç–∏–µ Enter
    elif event.keysym == 'Escape':
        close_app(program)
    elif event.keysym == 'F1':
        help_text(program)
    elif event.keysym == 'F2':
        click_translation(program, 'ru', value_1, value_2)
    elif event.keysym == 'F3':
        click_translation(program, 'en', value_1, value_2)
    elif event.keysym == 'F4':
        spell_checking(value_1, value_2)
    elif event.keysym == 'F5':
        spell_checking(value_1, value_2, 'en')
    elif event.keysym == 'F6':
        click_button_byfer(value_1)
    elif event.keysym == 'F7':
        click_button_clear(value_1, value_2)


def open_link(event: tk.Event, url: str = GITHUB):
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è —Å—Å—ã–ª–∫–∏"""
    webbrowser.open_new(url)  # –í—Å—Ç–∞–≤—å—Ç–µ –Ω—É–∂–Ω—É—é —Å—Å—ã–ª–∫—É


def spell_checking(
    value_1: ctk.CTkTextbox, value_2: ctk.CTkTextbox, language: str = 'ru'
):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏–∏"""
    spell = SpellChecker(language=None)
    if language == 'ru':
        dict_path = '/words/ru.json'
    else:
        dict_path = '/words/en.json'
    try:  # –ï—Å–ª–∏ –∑–∞–ø—É—â–µ–Ω–æ –∏–∑ –∏—Å–ø–æ–ª–Ω—è–µ–º–æ–≥–æ —Ñ–∞–π–ª–∞
        spell.word_frequency.load_dictionary(
            os.path.dirname(sys.executable) + dict_path)
    except FileNotFoundError:  # –ï—Å–ª–∏ –∑–∞–ø—É—â–µ–Ω–æ –∏–∑ —Å–∫—Ä–∏–ø—Ç–∞
        spell.word_frequency.load_dictionary('dist' + dict_path)
    # result = spell.candidates(value)  # –ø—Ä–æ–≤–µ—Ä–∫–∞ –æ–¥–Ω–æ–≥–æ —Å–ª–æ–≤–∞
    text_input = value_1.get("1.0", 'end')
    result = []
    words = text_input.split()
    mistakes = spell.unknown(words)
    for word in words:
        correction = spell.correction(word)
        if word in mistakes and correction is not None:
            word = correction
        result.append(word)

    value_2.configure(state="normal")
    value_2.delete("1.0", 'end')  # –û—á–∏—â–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—è
    value_2.insert('end', ' '.join(result))
    value_2.configure(state="disabled")


if __name__ == '__main__':
    ctk.set_appearance_mode("dark")  # —Ç–µ–º–Ω–∞—è —Ç–µ–º–∞
    root = ctk.CTk()
    root.title(TITLE)
    root.resizable(False, False)  # –ó–∞–ø—Ä–µ—â–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
    root.option_add('*Font', FONT)
    root.geometry("1020x670")  # –®–∏—Ä–∏–Ω–∞ 300 –ø–∏–∫—Å–µ–ª–µ–π, –≤—ã—Å–æ—Ç–∞ 200 –ø–∏–∫—Å–µ–ª–µ–π

    # --- frame_1 -------------------------------------
    frame_1 = ctk.CTkFrame(root)
    label_1 = ctk.CTkLabel(
        frame_1, text="–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç: ", font=FONT, width=LABEL_WIDTH)
    text_1 = ctk.CTkTextbox(
        frame_1, width=WIDTH_TEXT, height=HEIGHT_TEXT, font=FONT)
    text_1.insert(tk.END, BUFFER)

    label_1.pack(side="left")
    text_1.pack(side="left")
    # --- / frame_1 -----------------------------------

    # --- frame_2 -------------------------------------
    frame_2 = ctk.CTkFrame(root)
    label_2 = ctk.CTkLabel(
        frame_2, text="–û—Ç–≤–µ—Ç: ", font=FONT, width=LABEL_WIDTH)
    text_2 = ctk.CTkTextbox(
        frame_2, width=WIDTH_TEXT, height=HEIGHT_TEXT, font=FONT)
    text_2.configure(state="disabled")

    label_2.pack(side="left")
    text_2.pack(side="left")
    # --- / frame_2 -----------------------------------

    # --- frame_3 -------------------------------------
    frame_3 = ctk.CTkFrame(root)
    button_ru = ctk.CTkButton(
        frame_3, text=TRANSLATE_RU,
        fg_color="green", hover_color="darkgreen", text_color=TEXT_COLOR,
        command=lambda: click_translation(root, 'ru', text_1, text_2))
    button_en = ctk.CTkButton(
        frame_3, text=TRANSLATE_EN,
        fg_color="blue", hover_color="darkblue", text_color=TEXT_COLOR,
        command=lambda: click_translation(root, 'en', text_1, text_2))
    button_spelling_ru = ctk.CTkButton(
        frame_3, text=SPELLING_RU,
        fg_color="slateblue", hover_color="darkslateblue",
        text_color=TEXT_COLOR,
        command=lambda: spell_checking(text_1, text_2))
    button_spelling_en = ctk.CTkButton(
        frame_3, text=SPELLING_EN,
        fg_color="slateblue", hover_color="darkslateblue",
        text_color=TEXT_COLOR,
        command=lambda: spell_checking(text_1, text_2, 'en'))

    button_ru.pack(side="left", padx=10)
    button_en.pack(side="left", padx=10)
    button_spelling_ru.pack(side="left", padx=10)
    button_spelling_en.pack(side="left", padx=10)
    # --- / frame_3 -----------------------------------

    # --- frame_4 -------------------------------------
    frame_4 = ctk.CTkFrame(root)
    button_byfer = ctk.CTkButton(
        frame_4, text=PASTE_BUFFER,
        fg_color="slategray", hover_color="darkslategray",
        text_color=TEXT_COLOR,
        command=lambda: click_button_byfer(text_1))
    button_clear = ctk.CTkButton(
        frame_4, text=CLEAR,
        fg_color="slategray", hover_color="darkslategray",
        text_color=TEXT_COLOR,
        command=lambda: click_button_clear(text_1, text_2))

    button_help = ctk.CTkButton(
        frame_4, text='–ü–æ–º–æ—â—å',
        fg_color="slategray", hover_color="darkslategray",
        text_color=TEXT_COLOR,
        command=lambda: help_text(root))
    button_exit = ctk.CTkButton(
        frame_4, text='–í—ã—Ö–æ–¥',
        fg_color="red", hover_color="maroon", text_color=TEXT_COLOR,
        command=lambda: close_app(root))

    button_byfer.pack(side="left", padx=10)
    button_clear.pack(side="left", padx=10)
    button_help.pack(side="left", padx=10)
    button_exit.pack(side="left", padx=10)
    # --- / frame_4 -----------------------------------

    # --- frame_5 -------------------------------------
    frame_5 = ctk.CTkFrame(root)
    link_label = ctk.CTkLabel(
        frame_5, text=GITHUB, text_color="blue",
        cursor="hand2", font=FONT)
    link_label_opisanie = ctk.CTkLabel(
        frame_5, text='P–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π github:',
        cursor="hand2", font=FONT)
    link_label.bind(
        "<Button-1>", lambda event: open_link(event))
    link_label_opisanie.pack(side="left", padx=10)
    link_label.pack(side="left", padx=10)
    # --- / frame_5 -----------------------------------

    root.bind("<KeyPress>", lambda event: on_key_press(
        root, event, text_1, text_2))
    # root.bind("<Button-3>", context_menu)
    frame_1.pack(pady=(10, 10), padx=(10, 10))
    frame_2.pack(pady=(0, 10), padx=(10, 10))
    frame_3.pack(pady=(0, 15))
    frame_4.pack(pady=(0, 10))
    frame_5.pack(pady=(10, 10))

    click_translation(root, 'ru', text_1, text_2)  # –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å —Ç–µ–∫—Å—Ç –∏–∑ –±—É—Ñ–µ—Ä–∞
    root.mainloop()
